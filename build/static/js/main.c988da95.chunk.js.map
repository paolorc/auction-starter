{"version":3,"sources":["adapters/xhr.ts","utils/storage.ts","hooks/useUser.ts","services/login.ts","services/getAccount.ts","hooks/useAuctionCreator.ts","services/publish.ts","services/applierActions.ts","hooks/useAuctions.ts","services/getAuctions.ts","components/Auction/index.tsx","components/Winner/index.tsx","pages/Home.tsx","pages/Login.tsx","theme/index.ts","components/Account/Applied/index.tsx","components/Account/Listing/index.tsx","pages/Account.tsx","App.tsx","index.tsx"],"names":["axios","create","baseURL","headers","getJWT","window","sessionStorage","getItem","removeJWT","removeItem","useUser","initial","loading","error","jwt","useCallback","jwtFromStorage","account","useState","state","setState","login","data","request","url","method","then","loginService","res","token","accessToken","setItem","catch","err","console","fetchAccount","Authorization","logout","isLoggedIn","Boolean","loginLoading","loginError","useAuctionCreator","creating","setCreating","auctionCreated","setAuctionCreated","publishAuction","publishAuctionService","unpublishAuction","unpublishAuctionService","updateAuction","id","auctionId","updateAuctionService","setWinner","winnerId","setWinnerService","applyAuction","applyAuctionService","discardAuction","discardAuctionService","useAuctions","setLoading","auctions","setAuctions","auction","setAuction","getAuctions","params","getAuctionsService","getAccountAuctions","getAccountAuctionsService","getAuctionById","getAuctionByIdService","Auction","errorMsg","setErrorMsg","open","setOpen","title","setTitle","description","setDescription","category","setCategory","imageUrl","setImageUrl","useEffect","showcased","status","toggleModal","prev","Grid","container","direction","alignContent","alignItems","item","xs","CircularProgress","color","sx","width","flexGrow","Modal","onClose","position","top","left","transform","bgcolor","border","boxShadow","p","Typography","variant","component","TextField","fullWidth","required","label","margin","onChange","e","target","value","marginTop","Button","disabled","onClick","message","log","style","padding","Alert","severity","length","map","auct","alreadyApplied","appliers","includes","_id","myListing","owner","Card","maxWidth","marginBottom","CardHeader","avatar","Avatar","blue","firstName","slice","lastName","subheader","Date","createdAt","toLocaleString","CardMedia","height","image","alt","CardContent","Divider","CardActions","disableSpacing","IconButton","Collapse","timeout","unmountOnExit","paragraph","paddingTop","Winner","winners","winner","backgroundColor","in","profile","email","phone","tabNames","Home","tab","setTab","to","Box","AppBar","display","flexDirection","href","Person","ExitToApp","Tabs","_event","newValue","textColor","indicatorColor","Tab","Login","setEmail","password","setPassword","handleLogin","align","type","onKeyDown","which","theme","createTheme","palette","primary","main","secondary","AccountApplied","applied","iWon","Listings","action","toUpperCase","Tooltip","DeleteOutlineRounded","app","applierId","renderView","finished","listings","Account","NotFound","App","ThemeProvider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yCACTC,QAAS,CAAE,eAAgB,sBCJhBC,EAAS,kBAAMC,OAAOC,eAAeC,QAAQ,QAC7CC,EAAY,kBAAMH,OAAOC,eAAeG,WAAW,QCKzD,SAASC,IACd,IAEMC,EAAU,CACdC,SAAS,EACTC,OAAO,EACPC,IALqBC,sBAAYX,EAAQ,GAKpCY,GACLC,QAAS,IAGX,EAA0BC,mBAASP,GAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KASMC,EAAQN,uBAAY,SAACO,GACzBF,EAAS,2BAAKD,GAAN,IAAaP,SAAS,KCnB3B,SAAeU,GACpB,OAAOC,EAAQ,CACbC,IAAK,kBACLC,OAAQ,OACRH,SACCI,MAAK,qBAAGJ,QDgBTK,CAAaL,GACVI,MAAK,SAACE,GD3BS,IAACC,IC4BT,OAACD,QAAD,IAACA,OAAD,EAACA,EAAKE,YD3BlBzB,OAAOC,eAAeyB,QAAQ,MAAOF,GC4B/BT,EAAS,2BACJD,GADG,IAENP,SAAS,EACTE,IAAG,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAKE,YACVb,QAAO,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAKX,cAGjBe,OAAM,SAACC,GACNzB,IACAY,EAAS,2BAAKD,GAAN,IAAaP,SAAS,EAAOC,OAAO,EAAMC,IAAK,MACvDoB,QAAQrB,MAAMoB,QAEjB,IAsBH,MAAO,CACLE,aArBmBpB,uBAAY,WAC/BK,EAAS,2BAAKD,GAAN,IAAaP,SAAS,KEtBzBW,EAAQ,CACbC,IAAK,eACLC,OAAQ,OACRtB,QAAS,CACPiC,cAAc,UAAD,OAAYhC,QAE1BsB,MAAK,qBAAGJ,QFmBNI,MAAK,SAACT,GACLG,EAAS,2BACJD,GADG,IAENP,SAAS,EACTK,aAGFG,EAAS,2BAAKD,GAAN,IAAaF,gBAEtBe,OAAM,SAACC,GACNzB,IACAY,EAAS,2BAAKD,GAAN,IAAaP,SAAS,EAAOC,OAAO,EAAMC,IAAK,MACvDoB,QAAQrB,MAAMoB,QAEjB,IAIDZ,QACAgB,OAlDa,WACbjB,EAAS,2BAAKD,GAAN,IAAaP,SAAS,KAE9BQ,EAAS,2BAAKT,GAAN,IAAeG,IAAK,MAC5BN,KA+CAS,QAASE,EAAMF,QACfqB,WAAYC,QAAQpB,EAAML,KAC1B0B,aAAcrB,EAAMP,QACpB6B,WAAYtB,EAAMN,O,iIGzDf,SAAS6B,IACd,MAAgCxB,oBAAS,GAAzC,mBAAOyB,EAAP,KAAiBC,EAAjB,KACA,EAA4C1B,mBAC1C,IADF,mBAAO2B,EAAP,KAAuBC,EAAvB,KAyDA,MAAO,CACLH,WACAC,cACAC,iBACAC,oBACAC,eA1DqB,SAACzB,GAGtB,OAFAsB,GAAY,GClBT,SAAwBtB,GAC7B,OAAOC,EAAQ,CACbC,IAAK,oBACLC,OAAQ,OACRH,OACAnB,QAAS,CACPiC,cAAc,UAAD,OAAYhC,QAE1BsB,MAAK,qBAAGJ,QDYF0B,CAAsB1B,GAAMI,MAAK,SAACJ,GACvCwB,EAAkBxB,GAClBsB,GAAY,OAsDdK,iBAlDuB,SAAC3B,GAGxB,OAFAsB,GAAY,GCET,SAA0BtB,GAC/B,OAAOC,EAAQ,CACbC,IAAK,sBACLC,OAAQ,OACRH,OACAnB,QAAS,CACPiC,cAAc,UAAD,OAAYhC,QAE1BsB,MAAK,qBAAGJ,QDRF4B,CAAwB5B,GAAMI,MAAK,SAACJ,GACzCsB,GAAY,OA+CdO,cA3CoB,SAACC,EAAY9B,GAGjC,OAFAsB,GAAY,GCxBT,SACLS,EACA/B,GAEA,OAAOC,EAAQ,CACbC,IAAI,aAAD,OAAe6B,GAClB5B,OAAQ,OACRH,OACAnB,QAAS,CACPiC,cAAc,UAAD,OAAYhC,QAE1BsB,MAAK,qBAAGJ,QDeFgC,CAAqBF,EAAI9B,GAAMI,MAAK,SAACJ,GAC1CwB,EAAkBxB,GAClBsB,GAAY,OAuCdW,UAnCgB,SAACF,EAAmBG,GAGpC,OAFAZ,GAAY,GE5CT,SACLS,EACAG,GAEA,OAAOjC,EAAQ,CACbC,IAAI,aAAD,OAAe6B,EAAf,WACH5B,OAAQ,OACRH,KAAM,CAAEkC,YACRrD,QAAS,CACPiC,cAAc,UAAD,OAAYhC,QAE1BsB,MAAK,qBAAGJ,QFmCFmC,CAAiBJ,EAAWG,GAAU9B,MAAK,SAACJ,GACjDwB,EAAkBxB,GAClBsB,GAAY,OA+Bdc,aA3BmB,SAACL,GAGpB,OAFAT,GAAY,GEvCT,SAAsBS,GAC3B,OAAO9B,EAAQ,CACbC,IAAI,aAAD,OAAe6B,EAAf,UACH5B,OAAQ,OACRtB,QAAS,CACPiC,cAAc,UAAD,OAAYhC,QAE1BsB,MAAK,qBAAGJ,QFkCFqC,CAAoBN,GAAW3B,MAAK,SAACJ,GAC1CwB,EAAkBxB,GAClBsB,GAAY,OAuBdgB,eAnBqB,SAACP,GAGtB,OAFAT,GAAY,GEtCT,SAAwBS,GAC7B,OAAO9B,EAAQ,CACbC,IAAI,aAAD,OAAe6B,EAAf,YACH5B,OAAQ,OACRtB,QAAS,CACPiC,cAAc,UAAD,OAAYhC,QAE1BsB,MAAK,qBAAGJ,QFiCFuC,CAAsBR,GAAW3B,MAAK,SAACJ,GAC5CwB,EAAkBxB,GAClBsB,GAAY,QG5DX,SAASkB,IACd,MAA8B5C,oBAAS,GAAvC,mBAAON,EAAP,KAAgBmD,EAAhB,KACA,EAAgC7C,mBAAqB,IAArD,mBAAO8C,EAAP,KAAiBC,EAAjB,KACA,EAA8B/C,mBAAmB,IAAjD,mBAAOgD,EAAP,KAAgBC,EAAhB,KA6BA,MAAO,CACLvD,UACAoD,WACAE,UACAC,aACAF,cACAG,YAjCkB,SAACC,GACnBN,GAAW,GCYR,SAAqBM,GAC1B,OAAO9C,EAAQ,CACbC,IAAK,YACLC,OAAQ,MACR4C,SACAlE,QAAS,CACPiC,cAAc,UAAD,OAAYhC,QAE1BsB,MAAK,qBAAGJ,QDlBTgD,CAAmBD,GAAQ3C,MAAK,SAACJ,GAC/B2C,EAAY3C,GACZyC,GAAW,OA6BbQ,mBAzByB,SAACF,GAC1BN,GAAW,GCcR,SACLM,GAEA,OAAO9C,EAAQ,CACbC,IAAK,eACLC,OAAQ,MACR4C,SACAlE,QAAS,CACPiC,cAAc,UAAD,OAAYhC,QAE1BsB,MAAK,qBAAGJ,QDtBTkD,CAA0BH,GAAQ3C,MAAK,SAACJ,GACtC2C,EAAY3C,GACZyC,GAAW,OAqBbU,eAjBqB,SAACrB,GACtBW,GAAW,GCkBR,SAAwBX,GAC7B,OAAO7B,EAAQ,CAAEC,IAAI,aAAD,OAAe4B,GAAM3B,OAAQ,QAASC,MACxD,qBAAGJ,QDlBHoD,CAAsBtB,GAAI1B,MAAK,SAACJ,GAC9B6C,EAAW7C,GACXyC,GAAW,Q,WEHV,SAASY,EAAT,GAAsD,IAAnC1D,EAAkC,EAAlCA,QACxB,EAAwD6C,IAAhDlD,EAAR,EAAQA,QAASoD,EAAjB,EAAiBA,SAAUI,EAA3B,EAA2BA,YAC3B,GADA,EAAwCH,YAQpCvB,KANFC,EADF,EACEA,SACAE,EAFF,EAEEA,eACAE,EAHF,EAGEA,eACAH,EAJF,EAIEA,YACAc,EALF,EAKEA,aACAE,EANF,EAMEA,eAEF,EAAgC1C,mBAAS,IAAzC,mBAAO0D,EAAP,KAAiBC,EAAjB,KACA,EAAwB3D,oBAAS,GAAjC,mBAAO4D,EAAP,KAAaC,EAAb,KACA,EAA0B7D,mBAAS,IAAnC,mBAAO8D,EAAP,KAAcC,EAAd,KACA,EAAsC/D,mBAAS,IAA/C,mBAAOgE,EAAP,KAAoBC,EAApB,KACA,EAAgCjE,mBAAS,IAAzC,mBAAOkE,GAAP,KAAiBC,GAAjB,KACA,GAAgCnE,mBAAS,IAAzC,qBAAOoE,GAAP,MAAiBC,GAAjB,MAEAC,qBAAU,WACRpB,EAAY,CAAEqB,WAAW,EAAMC,OAAQ,aACtC,CAAC7C,IAEJ,IA6CM8C,GAAc,WAClBZ,GAAQ,SAACa,GAAD,OAAWA,KA7CnBL,GAAY,IACZF,GAAY,IACZF,EAAe,IACfF,EAAS,KA8CX,OACE,8BACE,cAACY,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,aAAa,SACbC,WAAW,SAJb,SAME,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACGvF,EACC,cAACiF,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,aAAa,SAAhD,SACE,cAACI,EAAA,EAAD,CAAkBC,MAAM,gBAG1B,eAAC,IAAD,CAAKC,GAAI,CAAEC,MAAO,QAAUC,SAAU,EAAtC,UACE,cAACC,EAAA,EAAD,CACE3B,KAAMA,EACN4B,QAASf,GACT,kBAAgB,oBAChB,mBAAiB,0BAJnB,SAME,eAAC,IAAD,CACEW,GAAI,CACFK,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXP,MAAO,IACPQ,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GAVP,UAaE,cAACC,EAAA,EAAD,CACE/D,GAAG,oBACHgE,QAAQ,KACRC,UAAU,KAHZ,wCAQA,8BACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAQ,EACRC,MAAM,QACNC,OAAO,SACPC,SAAU,SAACC,GAAD,OAAO3C,EAAS2C,EAAEC,OAAOC,QACnCA,MAAO9C,MAIX,8BACE,cAACsC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAQ,EACRC,MAAM,cACNC,OAAO,SACPC,SAAU,SAACC,GAAD,OAAOzC,EAAeyC,EAAEC,OAAOC,QACzCA,MAAO5C,MAIX,8BACE,cAACoC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAQ,EACRC,MAAM,WACNC,OAAO,SACPC,SAAU,SAACC,GAAD,OAAOvC,GAAYuC,EAAEC,OAAOC,QACtCA,MAAO1C,OAIX,8BACE,cAACkC,EAAA,EAAD,CACEC,WAAS,EACTE,MAAM,0CACNC,OAAO,SACPC,SAAU,SAACC,GAAD,OAAOrC,GAAYqC,EAAEC,OAAOC,QACtCA,MAAOxC,OAIX,cAAC,IAAD,CAAKyC,UAAU,KAAf,SACE,cAACC,EAAA,EAAD,CACEC,SAAUtF,EACV4E,WAAS,EACTH,QAAQ,YACRf,MAAM,OACN6B,QAtII,WACtBrD,EAAY,IACZjC,GAAY,GAEZG,EAAe,CACbiC,QACAE,cACAE,YACAE,cAEC5D,MAAK,WACJkB,GAAY,GACZ+C,QAED3D,OAAM,SAACnB,GACN+B,GAAY,GACZiC,EAAYhE,EAAMsH,SAClBjG,QAAQkG,IAAIvH,EAAMsH,SAClBxC,SA+GY,oCAaN,sBAAK0C,MAAO,CAAE9B,MAAO,QAArB,UACE,qBAAK8B,MAAO,CAAEC,QAAS,QAAvB,SACE,cAACnB,EAAA,EAAD,CAAY/D,GAAG,oBAAf,yDAKDb,QAAQqC,IACP,8BACE,cAAC2D,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB5D,MAI7B,qBAAKyD,MAAO,CAAEC,QAAS,QAAvB,SACE,cAACN,EAAA,EAAD,CAAQZ,QAAQ,WAAWf,MAAM,OAAO6B,QAASvC,GAAjD,kCAKD3B,EAASyE,OAAS,EACjBzE,EAAS0E,KAAI,SAACC,GAAU,IAAD,IACfC,EAAc,UAAGD,EAAKE,gBAAR,aAAG,EAAeC,SACpC7H,EAAQ8H,KAGJC,EAAYL,EAAKM,MAAMF,MAAQ9H,EAAQ8H,IAI7C,OAFA7G,QAAQkG,IAAIY,GAGV,eAACE,EAAA,EAAD,CAEE5C,GAAI,CAAE6C,SAAU,IAAKC,aAAc,GAFrC,UAIE,cAACC,EAAA,EAAD,CACEC,OACE,eAACC,EAAA,EAAD,CACEjD,GAAI,CAAES,QAASyC,IAAK,MACpB,aAAW,SAFb,UAIGb,EAAKM,MAAMQ,UAAUC,MAAM,EAAG,GAC9Bf,EAAKM,MAAMU,SAASD,MAAM,EAAG,MAGlC1E,MAAO2D,EAAK3D,MACZ4E,UAAW,IAAIC,KAAKlB,EAAKmB,WAAWC,mBAEtC,cAACC,EAAA,EAAD,CACE3C,UAAU,MACV4C,OAAO,MACPC,MAAOvB,EAAKrD,UA9NnB,gDA+NO1E,QAAQ,OACRuJ,IAAI,SAEN,cAACC,EAAA,EAAD,UACE,eAACjD,EAAA,EAAD,CAAYC,QAAQ,QAAQf,MAAM,iBAAlC,UACGsC,EAAKzD,YACN,cAACmF,EAAA,EAAD,IACA,iEAA0B1B,EAAKE,gBAA/B,aAA0B,EAAeJ,eAI7C,eAAC6B,EAAA,EAAD,CAAaC,gBAAc,EAA3B,UACGvB,GACC,cAAC7B,EAAA,EAAD,CAAYC,QAAQ,QAAQf,MAAM,iBAAlC,oDAKAuC,GAAkBD,EAAKM,MAAMF,MAAQ9H,EAAQ8H,KAC7C,cAACf,EAAA,EAAD,CACEZ,QAAQ,YACRf,MAAM,UACN6B,QAAS,SAACN,GAAD,OAjMhBvE,EAiMkC,OAACsF,QAAD,IAACA,OAAD,EAACA,EAAMI,IAhM5DnG,GAAY,QAEZc,EAAaL,GAAW3B,MAAK,SAACJ,GAC5BsB,GAAY,MAJI,IAACS,GA8LK,0BASDuF,GAAkBD,EAAKM,MAAMF,MAAQ9H,EAAQ8H,KAC5C,cAACf,EAAA,EAAD,CACEZ,QAAQ,YACRf,MAAM,UACN6B,QAAS,SAACN,GAAD,OAnMdvE,EAmMkC,OAACsF,QAAD,IAACA,OAAD,EAACA,EAAMI,IAlM9DnG,GAAY,QAEZgB,EAAeP,GAAW3B,MAAK,SAACJ,GAC9BsB,GAAY,MAJM,IAACS,GAgMG,4BASF,cAACmH,EAAA,EAAD,CAAY,aAAW,aAazB,cAACC,EAAA,EAAD,CAEEC,QAAQ,OACRC,eAAa,EAHf,SAKE,eAACP,EAAA,EAAD,WACE,cAACjD,EAAA,EAAD,CAAYyD,WAAS,EAArB,qBACA,cAACzD,EAAA,EAAD,2FA9ECwB,EAAKI,QAwFhB,qBACEV,MAAO,CACLC,QAAS,QAFb,SAKE,eAACnB,EAAA,EAAD,CAAY/D,GAAG,oBAAf,uFAGE,cAAC,IAAD,CAAK2E,UAAU,KAAK8C,WAAW,KAA/B,SACE,cAAC7C,EAAA,EAAD,CAEET,WAAS,EACTH,QAAQ,YACRf,MAAM,OAJR,gDCzTjB,SAASyE,EAAT,GAAqD,IAAnC7J,EAAkC,EAAlCA,QACvB,EAA2C6C,IAAnClD,EAAR,EAAQA,QAASoD,EAAjB,EAAiBA,SAAUI,EAA3B,EAA2BA,YACnBvB,EAAmBH,IAAnBG,eAMR,OAJA2C,qBAAU,WACRpB,EAAY,CAAEqB,WAAW,EAAMsF,SAAS,MACvC,CAAClI,IAGF,8BACE,cAACgD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,aAAa,SACbC,WAAW,SAJb,SAME,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACGvF,EACC,cAACiF,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,aAAa,SAAhD,SACE,cAACI,EAAA,EAAD,CAAkBC,MAAM,gBAG1B,cAAC,IAAD,CAAKC,GAAI,CAAEC,MAAO,QAAUC,SAAU,EAAtC,SACE,sBAAK6B,MAAO,CAAE9B,MAAO,QAArB,UACE,qBAAK8B,MAAO,CAAEC,QAAS,QAAvB,SACE,cAACnB,EAAA,EAAD,CAAY/D,GAAG,oBAAf,qCAKDY,EAASyE,OAAS,EACjBzE,EAAS0E,KAAI,SAACC,GACQ,UAAGA,EAAKE,gBAAR,OAAG,EAAeC,SACpC7H,EAAQ8H,KAFY,IAAD,kBAKfC,EAAYL,EAAKM,MAAMF,MAAQ9H,EAAQ8H,IAI7C,OAFA7G,QAAQkG,IAAIY,GAGV,eAACE,EAAA,EAAD,CAEE5C,GAAI,CAAE6C,SAAU,IAAKC,aAAc,GAFrC,UAIE,cAACC,EAAA,EAAD,CACEC,OACE,eAACC,EAAA,EAAD,CACEjD,GAAI,CAAES,QAASyC,IAAK,MACpB,aAAW,SAFb,UAIGb,EAAKM,MAAMQ,UAAUC,MAAM,EAAG,GAC9Bf,EAAKM,MAAMU,SAASD,MAAM,EAAG,MAGlC1E,MAAO2D,EAAK3D,MACZ4E,UAAW,IAAIC,KAAKlB,EAAKmB,WAAWC,mBAEtC,cAACC,EAAA,EAAD,CACE3C,UAAU,MACV4C,OAAO,MACPC,MAAOvB,EAAKrD,SACZ1E,QAAQ,OACRuJ,IAAI,SAEN,cAACC,EAAA,EAAD,UACE,eAACjD,EAAA,EAAD,CAAYC,QAAQ,QAAQf,MAAM,iBAAlC,UACGsC,EAAKzD,YACN,cAACmF,EAAA,EAAD,KAEK,OAAJ1B,QAAI,IAAJA,GAAA,UAAAA,EAAMqC,cAAN,eAAcjC,QAAd,OAAsB9H,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAS8H,KAC9B,qGAKA,qCACGJ,QADH,IACGA,GADH,UACGA,EAAMqC,cADT,aACG,EAAcvB,UAAW,IAD5B,OAEGd,QAFH,IAEGA,GAFH,UAEGA,EAAMqC,cAFT,aAEG,EAAcrB,SAFjB,iBAQD,OAAJhB,QAAI,IAAJA,GAAA,UAAAA,EAAMqC,cAAN,eAAcjC,QAAd,OAAsB9H,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAS8H,MAC9B,cAAC0B,EAAA,EAAD,CACEpC,MAAO,CAAE4C,gBAAiB,WAE1BC,IAAI,EACJR,QAAQ,OACRC,eAAa,EALf,SAOE,cAACP,EAAA,EAAD,UACE,eAACjD,EAAA,EAAD,4BACUwB,QADV,IACUA,GADV,UACUA,EAAMM,aADhB,iBACU,EAAakC,eADvB,aACU,EAAsBC,MADhC,iBAEUzC,QAFV,IAEUA,GAFV,UAEUA,EAAMM,aAFhB,iBAEU,EAAakC,eAFvB,aAEU,EAAsBE,YAVpC,OAEO1C,QAFP,IAEOA,OAFP,EAEOA,EAAMI,OA7CVJ,EAAKI,QA8DhB,qBACEV,MAAO,CACLC,QAAS,QAFb,SAKE,cAACnB,EAAA,EAAD,CAAY/D,GAAG,oBAAf,6GC/Gb,IAAMkI,EACD,WADCA,EAEF,UAGJ,SAASC,IACd,MAAoE7K,IAA5DO,EAAR,EAAQA,QAASkB,EAAjB,EAAiBA,aAAcG,EAA/B,EAA+BA,WAAYE,EAA3C,EAA2CA,aAAcH,EAAzD,EAAyDA,OACzD,EAAsBnB,mBAASoK,GAA/B,mBAAOE,EAAP,KAAYC,EAAZ,KAUA,GARAjG,qBAAU,YACJlD,GAAerB,EAAQwI,WAAcjH,IACvCN,QAAQkG,IAAI,kCAEZjG,OAED,CAACG,EAAYrB,EAASkB,KAEpBG,EAGH,OAFAJ,QAAQkG,IAAI,kBAEL,cAAC,IAAD,CAAUsD,GAAG,WAUtB,OACE,eAACC,EAAA,EAAD,CAAK1B,OAAO,MAAZ,UACE,cAAC2B,EAAA,EAAD,CAAQjF,SAAS,SAAjB,SACE,eAACgF,EAAA,EAAD,CAAKE,QAAQ,OAAOC,cAAc,MAAM7F,WAAW,SAAnD,UACE,eAACuE,EAAA,EAAD,CACE,aAAW,0BACX,gBAAc,cACd,gBAAc,OACduB,KAAK,WACL1F,MAAM,UALR,UAOE,cAAC2F,EAAA,EAAD,IAAW,IACX,eAAC7E,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,UACGpG,EAAQwI,UADX,IACuBxI,EAAQ0I,eAIjC,qBAAKtB,MAAO,CAAE9B,MAAO,SAErB,cAACiE,EAAA,EAAD,CACE,aAAW,0BACX,gBAAc,cACd,gBAAc,OACdtC,QA/BS,WACjB7F,KA+BQgE,MAAM,UALR,SAOE,cAAC4F,EAAA,EAAD,WAKN,8BACE,cAACpG,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,aAAa,SACbC,WAAW,SAJb,SAME,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACG3D,EACC,cAACqD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,aAAa,SAAhD,SACE,cAACI,EAAA,EAAD,CAAkBC,MAAM,gBAG1B,eAACsF,EAAA,EAAD,CAAKrF,GAAI,CAAEC,MAAO,QAAUC,SAAU,EAAtC,UACE,eAAC0F,EAAA,EAAD,CACEpE,MAAO0D,EACP7D,SAnDK,SAACwE,EAAQC,GAC5BX,EAAOW,IAmDOC,UAAU,YACVC,eAAe,YAJjB,UAME,cAACC,EAAA,EAAD,CAAKzE,MAAOwD,EAAmB7D,MAAM,aACrC,cAAC8E,EAAA,EAAD,CAAKzE,MAAOwD,EAAkB7D,MAAM,eAGrC+D,IAAQF,EACP,cAAC3G,EAAD,CAAS1D,QAASA,IAElB,cAAC6J,EAAD,CAAQ7J,QAASA,gBC9F5B,SAASuL,IACd,MAA0BtL,mBAAS,IAAnC,mBAAOkK,EAAP,KAAcqB,EAAd,KACA,EAAgCvL,mBAAS,IAAzC,mBAAOwL,EAAP,KAAiBC,EAAjB,KACA,EAAwDjM,IAAhDW,EAAR,EAAQA,MAAOoB,EAAf,EAAeA,WAAYD,EAA3B,EAA2BA,aAE3B,GAFA,EAAyCF,aAEtBE,EAGjB,OAFAN,QAAQkG,IAAI,uBAEL,cAAC,IAAD,CAAUsD,GAAG,UAGtB,IAAMkB,EAAc,WAClBvL,EAAM,CAAE+J,QAAOsB,cAWjB,OACE,8BACE,cAAC7G,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,aAAa,SACbC,WAAW,SAJb,SAME,eAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,UACE,cAACgB,EAAA,EAAD,CAAYC,QAAQ,KAAKyF,MAAM,SAASxG,MAAM,YAA9C,2BAIA,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAAKyF,MAAM,SAASxG,MAAM,YAA9C,mBAIC7D,GACC,cAACqD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,aAAa,SAAhD,SACE,cAACI,EAAA,EAAD,CAAkBC,MAAM,iBAI1B7D,GACA,eAACmJ,EAAA,EAAD,CAAKtE,UAAU,OAAf,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAQ,EACRpE,GAAG,oBACHqE,MAAM,QACNE,SAAU,SAACC,GAAD,OAAO6E,EAAS7E,EAAEC,OAAOC,QACnCA,MAAOsD,MAIX,8BACE,cAAC9D,EAAA,EAAD,CACEC,WAAS,EACTC,UAAQ,EACRsF,KAAK,WACL1J,GAAG,WACHqE,MAAM,WACNC,OAAO,SACPC,SAAU,SAACC,GAAD,OAAO+E,EAAY/E,EAAEC,OAAOC,QACtCA,MAAO4E,EACPK,UAtDO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxB9K,QAAQkG,IAAI4E,GAEE,KAAVA,GACFJ,SAsDQ,cAACjB,EAAA,EAAD,CAAK5D,UAAU,KAAf,SACE,cAACC,EAAA,EAAD,CACET,WAAS,EACTH,QAAQ,YACRf,MAAM,UACN6B,QAAS0E,EAJX,kBAUF,cAACjB,EAAA,EAAD,UACGlJ,GACC,cAAC0E,EAAA,EAAD,CAAY/D,GAAG,oBAAf,yD,YCrFH6J,EAXDC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,c,SCaL,SAASE,EAAT,GAA6D,IAAnCtM,EAAkC,EAAlCA,QAC/B,EAA2C6C,IAAnClD,EAAR,EAAQA,QAASoD,EAAjB,EAAiBA,SAAUI,EAA3B,EAA2BA,YAC3B,EAAwD1B,IAAhDG,EAAR,EAAQA,eAAgBe,EAAxB,EAAwBA,eAAgBhB,EAAxC,EAAwCA,YAExC4C,qBAAU,WACRpB,EAAY,CAAEoJ,SAAS,MACtB,CAAC3K,IAUJ,OACE,8BACE,cAACgD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,aAAa,SACbC,WAAW,SAJb,SAME,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACGvF,EACC,cAACiF,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,aAAa,SAAhD,SACE,cAACI,EAAA,EAAD,CAAkBC,MAAM,gBAG1B,cAAC,IAAD,CAAKC,GAAI,CAAEC,MAAO,QAAUC,SAAU,EAAtC,SACE,sBAAK6B,MAAO,CAAE9B,MAAO,QAArB,UACE,qBAAK8B,MAAO,CAAEC,QAAS,QAAvB,SACE,cAACnB,EAAA,EAAD,CAAY/D,GAAG,oBAAf,6BAGDY,EAASyE,OAAS,EACjBzE,EAAS0E,KAAI,SAACC,GAAU,IAAD,cACf8E,GAAW,OAAJ9E,QAAI,IAAJA,GAAA,UAAAA,EAAMqC,cAAN,eAAcjC,OAAQ9H,EAAQ8H,IAE3C,OACE,eAACG,EAAA,EAAD,CAEE5C,GAAI,CAAE6C,SAAU,IAAKC,aAAc,GAFrC,UAIE,cAACC,EAAA,EAAD,CACEC,OACE,eAACC,EAAA,EAAD,CACEjD,GAAI,CAAES,QAASyC,IAAK,MACpB,aAAW,SAFb,UAIGb,EAAKM,MAAMQ,UAAUC,MAAM,EAAG,GAC9Bf,EAAKM,MAAMU,SAASD,MAAM,EAAG,MAGlC1E,MAAO2D,EAAK3D,MACZ4E,UAAW,IAAIC,KAAKlB,EAAKmB,WAAWC,mBAEtC,cAACC,EAAA,EAAD,CACE3C,UAAU,MACV4C,OAAO,MACPC,MAAOvB,EAAKrD,SACZ1E,QAAQ,OACRuJ,IAAI,SAEN,cAACC,EAAA,EAAD,UACE,eAACjD,EAAA,EAAD,CAAYC,QAAQ,QAAQf,MAAM,iBAAlC,UACGsC,EAAKzD,YACN,cAACmF,EAAA,EAAD,IAECoD,GACC,mBAAGpH,MAAM,OAAT,oEAMG,OAAJsC,QAAI,IAAJA,OAAA,EAAAA,EAAMqC,SACL,qCACGrC,QADH,IACGA,GADH,UACGA,EAAMqC,cADT,aACG,EAAcvB,UAAW,IAD5B,OAEGd,QAFH,IAEGA,GAFH,UAEGA,EAAMqC,cAFT,aAEG,EAAcrB,SAFjB,YAMA8D,KAAQ,OAAC9E,QAAD,IAACA,OAAD,EAACA,EAAMqC,SACf,gCACE,uBACA,cAAChD,EAAA,EAAD,CACEZ,QAAQ,YACRf,MAAM,UACN6B,QAAS,SAACN,GAAD,OAlFlBvE,EAkFsC,OAACsF,QAAD,IAACA,OAAD,EAACA,EAAMI,IAjFlEnG,GAAY,QAEZgB,EAAeP,GAAW3B,MAAK,SAACJ,GAC9BsB,GAAY,MAJM,IAACS,GA+EO,oCAYPoK,GACC,cAAChD,EAAA,EAAD,CAEES,IAAI,EACJR,QAAQ,OACRC,eAAa,EAJf,SAME,eAACP,EAAA,EAAD,WACE,eAACjD,EAAA,EAAD,4BACUwB,QADV,IACUA,GADV,UACUA,EAAMM,aADhB,iBACU,EAAakC,eADvB,aACU,EAAsBC,SAGhC,eAACjE,EAAA,EAAD,4BACUwB,QADV,IACUA,GADV,UACUA,EAAMM,aADhB,iBACU,EAAakC,eADvB,aACU,EAAsBE,aAZpC,OACO1C,QADP,IACOA,OADP,EACOA,EAAMI,OA3DVJ,EAAKI,QA+EhB,qBACEV,MAAO,CACLC,QAAS,QAFb,SAKE,cAACnB,EAAA,EAAD,CAAY/D,GAAG,oBAAf,6G,wBCvHb,SAASsK,GAAT,GAAuD,IAAnCzM,EAAkC,EAAlCA,QACzB,EAAkD6C,IAA1ClD,EAAR,EAAQA,QAASoD,EAAjB,EAAiBA,SAAUO,EAA3B,EAA2BA,mBAC3B,EACE7B,IADMG,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,YAAaW,EAArC,EAAqCA,UAAWZ,EAAhD,EAAgDA,SAAUM,EAA1D,EAA0DA,iBAE1D,EAAgC/B,mBAAS,IAAzC,mBAAO0D,EAAP,KAAiBC,EAAjB,KAEAW,qBAAU,WACRjB,EAAmB,MAClB,CAAC1B,EAAgBF,IA8BpB,OACE,8BACE,cAACkD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,aAAa,SACbC,WAAW,SAJb,SAME,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACGvF,EACC,cAACiF,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,aAAa,SAAhD,SACE,cAACI,EAAA,EAAD,CAAkBC,MAAM,gBAG1B,cAAC,IAAD,CAAKC,GAAI,CAAEC,MAAO,QAAUC,SAAU,EAAtC,SACE,sBAAK6B,MAAO,CAAE9B,MAAO,QAArB,UACE,qBAAK8B,MAAO,CAAEC,QAAS,QAAvB,SACE,cAACnB,EAAA,EAAD,CAAY/D,GAAG,oBAAf,yDAKDb,QAAQqC,IACP,8BACE,cAAC2D,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB5D,MAI5BZ,EAASyE,OAAS,EACjBzE,EAAS0E,KAAI,SAACC,GACQ,UAAGA,EAAKE,gBAAR,OAAG,EAAeC,SAAf,OACrB7H,QADqB,IACrBA,OADqB,EACrBA,EAAS8H,KAFW,IAAD,gBAKfC,EAAYL,EAAKM,MAAMF,MAAQ9H,EAAQ8H,IAI7C,OAFA7G,QAAQkG,IAAIY,GAGV,eAACE,EAAA,EAAD,CAEE5C,GAAI,CAAE6C,SAAU,IAAKC,aAAc,EAAGd,QAAS,GAFjD,UAIE,cAACe,EAAA,EAAD,CACEC,OACE,eAACC,EAAA,EAAD,CACEjD,GAAI,CAAES,QAASyC,IAAK,MACpB,aAAW,SAFb,UAIGb,EAAKM,MAAMQ,UAAUC,MAAM,EAAG,GAC9Bf,EAAKM,MAAMU,SAASD,MAAM,EAAG,MAGlCiE,OACE,cAACxG,EAAA,EAAD,CAAYC,QAAQ,QAAQf,MAAM,iBAAlC,SACE,4BAAIsC,EAAKjD,OAAOkI,kBAGpB5I,MAAO2D,EAAK3D,MACZ4E,UAAW,IAAIC,KAAKlB,EAAKmB,WAAWC,mBAGtC,cAACC,EAAA,EAAD,CACE3C,UAAU,MACV4C,OAAO,MACPC,MAAOvB,EAAKrD,UAzGnB,gDA0GO1E,QAAQ,OACRuJ,IAAI,SAGN,cAACC,EAAA,EAAD,UACE,eAACjD,EAAA,EAAD,CAAYC,QAAQ,QAAQf,MAAM,iBAAlC,UACGsC,EAAKzD,YACN,cAACmF,EAAA,EAAD,IACA,iEAA0B1B,EAAKE,gBAA/B,aAA0B,EAAeJ,eAI7C,cAAC6B,EAAA,EAAD,CAAaC,gBAAc,EAA3B,SACE,cAACsD,GAAA,EAAD,CAAS7I,MAAM,SAAf,SACE,cAACwF,EAAA,EAAD,CACEtC,QAAS,kBA/FR7E,EA+FiC,OAACsF,QAAD,IAACA,OAAD,EAACA,EAAMI,IA9FnEnG,GAAY,QAEZK,EAAiB,CAAEI,cAChB3B,MAAK,SAACJ,GACLsB,GAAY,MAEbZ,OAAM,SAACnB,GACN+B,GAAY,GACZiC,EAAYhE,EAAMsH,SAClBjG,QAAQkG,IAAIvH,EAAMsH,YAVI,IAAC9E,GA8FH,SAGE,cAACyK,GAAA,EAAD,UAKN,eAACrD,EAAA,EAAD,CAEES,IAAI,EACJR,QAAQ,OACRC,eAAa,EAJf,WAMO,OAAJhC,QAAI,IAAJA,OAAA,EAAAA,EAAME,WACY,cAAb,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMjD,UACF,OAAJiD,QAAI,IAAJA,GAAA,UAAAA,EAAME,gBAAN,eAAgBJ,QAAS,GACzBE,EAAKE,SAASH,KAAI,SAACqF,GAAS,IAAD,IACzB,OACE,eAAC7E,EAAA,EAAD,CAEEb,MAAO,CAAEe,aAAc,IAFzB,UAIE,eAACgB,EAAA,EAAD,WACE,eAACjD,EAAA,EAAD,4BACU4G,QADV,IACUA,GADV,UACUA,EAAK5C,eADf,aACU,EAAcC,SAGxB,eAACjE,EAAA,EAAD,4BACU4G,QADV,IACUA,GADV,UACUA,EAAK5C,eADf,aACU,EAAcE,YAI1B,cAACrD,EAAA,EAAD,CACEZ,QAAQ,YACRf,MAAM,UACN6B,QAAS,SAACN,GAAD,OAhJrBvE,EAiJ0B,OAACsF,QAAD,IAACA,OAAD,EAACA,EAAMI,IAjJdiF,EAiJO,OAAYD,QAAZ,IAAYA,OAAZ,EAAYA,EAAKhF,IAhJ/DnG,GAAY,QAEZW,EAAUF,EAAW2K,GAClBtM,MAAK,SAACJ,GACLsB,GAAY,MAEbZ,OAAM,SAACnB,GACN+B,GAAY,GACZiC,EAAYhE,EAAMsH,SAClBjG,QAAQkG,IAAIvH,EAAMsH,YAVH,IAAC9E,EAAmB2K,GA6IT,8BAdF,OACOD,QADP,IACOA,OADP,EACOA,EAAKhF,SA0Bb,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMqC,SAA2B,cAAb,OAAJrC,QAAI,IAAJA,OAAA,EAAAA,EAAMjD,SACrB,eAACwD,EAAA,EAAD,WACE,cAACkB,EAAA,EAAD,UACE,eAACjD,EAAA,EAAD,CAAYyD,WAAS,EAArB,+BACcjC,QADd,IACcA,GADd,UACcA,EAAMqC,cADpB,aACc,EAAcvB,UAD5B,uBAMF,eAACW,EAAA,EAAD,WACE,cAACjD,EAAA,EAAD,CAAYyD,WAAS,EAArB,8BAGA,eAACzD,EAAA,EAAD,4BACUwB,QADV,IACUA,GADV,UACUA,EAAMqC,cADhB,iBACU,EAAcG,eADxB,aACU,EAAuBC,SAEjC,eAACjE,EAAA,EAAD,4BACUwB,QADV,IACUA,GADV,UACUA,EAAMqC,cADhB,iBACU,EAAcG,eADxB,aACU,EAAuBE,iBAvDzC,OACO1C,QADP,IACOA,OADP,EACOA,EAAMI,OAjDRJ,EAAKI,QAiHhB,qBACEV,MAAO,CACLC,QAAS,QAFb,SAKE,cAACnB,EAAA,EAAD,CAAY/D,GAAG,oBAAf,qGC7Mb,IAAMkI,GACF,UADEA,GAED,WAGN2C,GAAa,SAAChN,EAAmBuK,GAOrC,MANkB,CAChBgC,QAAS,cAACD,EAAD,CAAgBtM,QAASA,IAClCiN,SAAU,cAACX,EAAD,CAAgBtM,QAASA,IACnCkN,SAAU,cAACT,GAAD,CAAUzM,QAASA,KAGduK,IAGZ,SAAS4C,KACd,MAAoE1N,IAA5DO,EAAR,EAAQA,QAASkB,EAAjB,EAAiBA,aAAcG,EAA/B,EAA+BA,WAAYE,EAA3C,EAA2CA,aAAcH,EAAzD,EAAyDA,OACzD,EAAsBnB,mBAASoK,IAA/B,mBAAOE,EAAP,KAAYC,EAAZ,KAUA,GARAjG,qBAAU,YACJlD,GAAerB,EAAQwI,WAAcjH,IACvCN,QAAQkG,IAAI,kCAEZjG,OAED,CAACG,EAAYrB,EAASkB,KAEpBG,EAGH,OAFAJ,QAAQkG,IAAI,kBAEL,cAAC,IAAD,CAAUsD,GAAG,WAWtB,OACE,eAACC,EAAA,EAAD,CAAK1B,OAAO,MAAZ,UACE,cAAC2B,EAAA,EAAD,CAAQjF,SAAS,SAAjB,SACE,eAACgF,EAAA,EAAD,CAAKE,QAAQ,OAAOC,cAAc,MAAM7F,WAAW,SAAnD,UACE,eAACuE,EAAA,EAAD,CACE,aAAW,0BACX,gBAAc,cACd,gBAAc,OACduB,KAAK,QACL1F,MAAM,UALR,UAOE,cAAC,IAAD,IACA,eAACc,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,uBACapG,EAAQwI,UADrB,IACiCxI,EAAQ0I,eAI3C,qBAAKtB,MAAO,CAAE9B,MAAO,SACrB,cAACiE,EAAA,EAAD,CACE,aAAW,0BACX,gBAAc,cACd,gBAAc,OACdtC,QA9BS,WACjB7F,KA8BQgE,MAAM,UALR,SAOE,cAAC4F,EAAA,EAAD,WAKN,8BACE,cAACpG,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,aAAa,SACbC,WAAW,SAJb,SAME,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACG3D,EACC,cAACqD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,aAAa,SAAhD,SACE,cAACI,EAAA,EAAD,CAAkBC,MAAM,gBAG1B,eAACsF,EAAA,EAAD,CAAKrF,GAAI,CAAEC,MAAO,QAAUC,SAAU,EAAtC,UACE,eAAC0F,EAAA,EAAD,CACEpE,MAAO0D,EACP7D,SAlDK,SAACwE,EAAQC,GAC5BX,EAAOW,IAkDOC,UAAU,YACVC,eAAe,YAJjB,UAME,cAACC,EAAA,EAAD,CAAKzE,MAAOwD,GAAmB7D,MAAM,kBACrC,cAAC8E,EAAA,EAAD,CAAKzE,MAAOwD,GAAkB7D,MAAM,oBAGrCwG,GAAWhN,EAASuK,eCnG9B,IAAM6C,GAAW,WACtB,OAAO,cAAC,IAAD,CAAU3C,GAAG,WAkBP4C,OAff,WACE,OACE,cAACC,EAAA,EAAD,CAAetB,MAAOA,EAAtB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,SAASpH,UAAWmF,IACtC,cAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,QAAQpH,UAAWkE,IACrC,cAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,WAAWpH,UAAW+G,KACxC,cAAC,IAAD,CAAO/G,UAAWgH,aCvB5BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c988da95.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://auction-now.herokuapp.com/api/',\n  headers: { 'Content-Type': 'application/json' },\n});\n","export const getJWT = () => window.sessionStorage.getItem('jwt');\nexport const removeJWT = () => window.sessionStorage.removeItem('jwt');\nexport const setJWT = (token: string) =>\n  window.sessionStorage.setItem('jwt', token);\n","import { useCallback, useEffect, useState } from 'react';\n\nimport { getAccount, IAccount } from '../services/getAccount';\nimport { ILogin, login as loginService } from '../services/login';\nimport { getJWT, removeJWT, setJWT } from '../utils/storage';\n\nexport function useUser() {\n  const jwtFromStorage = useCallback(getJWT, []);\n\n  const initial = {\n    loading: false,\n    error: false,\n    jwt: jwtFromStorage(),\n    account: {} as IAccount,\n  };\n\n  const [state, setState] = useState(initial);\n\n  const logout = () => {\n    setState({ ...state, loading: true });\n\n    setState({ ...initial, jwt: '' });\n    removeJWT();\n  };\n\n  const login = useCallback((data: ILogin) => {\n    setState({ ...state, loading: true });\n\n    loginService(data)\n      .then((res) => {\n        setJWT(res?.accessToken);\n        setState({\n          ...state,\n          loading: false,\n          jwt: res?.accessToken,\n          account: res?.account,\n        });\n      })\n      .catch((err) => {\n        removeJWT();\n        setState({ ...state, loading: false, error: true, jwt: '' });\n        console.error(err);\n      });\n  }, []);\n\n  const fetchAccount = useCallback(() => {\n    setState({ ...state, loading: true });\n\n    getAccount()\n      .then((account) => {\n        setState({\n          ...state,\n          loading: false,\n          account,\n        });\n\n        setState({ ...state, account });\n      })\n      .catch((err) => {\n        removeJWT();\n        setState({ ...state, loading: false, error: true, jwt: '' });\n        console.error(err);\n      });\n  }, []);\n\n  return {\n    fetchAccount,\n    login,\n    logout,\n    account: state.account,\n    isLoggedIn: Boolean(state.jwt),\n    loginLoading: state.loading,\n    loginError: state.error,\n  };\n}\n","import request from '../adapters/xhr';\n\nexport interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport function login(data: ILogin) {\n  return request({\n    url: '/accounts/login',\n    method: 'POST',\n    data,\n  }).then(({ data }) => data);\n}\n","import request from '../adapters/xhr';\nimport { getJWT } from '../utils/storage';\n\nexport interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport interface IProfile {\n  about: string;\n  email: string;\n  phone: string;\n  address: string;\n  needs: string;\n}\n\nexport interface IAccount {\n  _id?: string;\n  firstName: string;\n  lastName: string;\n  profile: IProfile;\n}\n\nexport function getAccount(): Promise<IAccount> {\n  return request({\n    url: '/accounts/me',\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${getJWT()}`,\n    },\n  }).then(({ data }) => data);\n}\n\nexport function getAccountById(id: string): Promise<IAccount> {\n  return request({\n    url: `/accounts/${id}`,\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${getJWT()}`,\n    },\n  }).then(({ data }) => data);\n}\n","import { useState } from 'react';\nimport { IAuction } from '../services/getAuctions';\n\nimport {\n  IUnpublish,\n  publishAuction as publishAuctionService,\n  unpublishAuction as unpublishAuctionService,\n  updateAuction as updateAuctionService,\n} from '../services/publish';\nimport {\n  applyAuction as applyAuctionService,\n  discardAuction as discardAuctionService,\n  setWinner as setWinnerService,\n} from '../services/applierActions';\n\nexport function useAuctionCreator() {\n  const [creating, setCreating] = useState(false);\n  const [auctionCreated, setAuctionCreated] = useState<IAuction>(\n    {} as IAuction,\n  );\n\n  const publishAuction = (data: Partial<IAuction>) => {\n    setCreating(true);\n\n    return publishAuctionService(data).then((data) => {\n      setAuctionCreated(data);\n      setCreating(false);\n    });\n  };\n\n  const unpublishAuction = (data: IUnpublish) => {\n    setCreating(true);\n\n    return unpublishAuctionService(data).then((data) => {\n      setCreating(false);\n    });\n  };\n\n  const updateAuction = (id: string, data: Partial<IAuction>) => {\n    setCreating(true);\n\n    return updateAuctionService(id, data).then((data) => {\n      setAuctionCreated(data);\n      setCreating(false);\n    });\n  };\n\n  const setWinner = (auctionId: string, winnerId: string) => {\n    setCreating(true);\n\n    return setWinnerService(auctionId, winnerId).then((data) => {\n      setAuctionCreated(data);\n      setCreating(false);\n    });\n  };\n\n  const applyAuction = (auctionId: string) => {\n    setCreating(true);\n\n    return applyAuctionService(auctionId).then((data) => {\n      setAuctionCreated(data);\n      setCreating(false);\n    });\n  };\n\n  const discardAuction = (auctionId: string) => {\n    setCreating(true);\n\n    return discardAuctionService(auctionId).then((data) => {\n      setAuctionCreated(data);\n      setCreating(false);\n    });\n  };\n\n  return {\n    creating,\n    setCreating,\n    auctionCreated,\n    setAuctionCreated,\n    publishAuction,\n    unpublishAuction,\n    updateAuction,\n    setWinner,\n    applyAuction,\n    discardAuction,\n  };\n}\n","import request from '../adapters/xhr';\nimport { getJWT } from '../utils/storage';\nimport { IAuction } from './getAuctions';\n\nexport function publishAuction(data: Partial<IAuction>): Promise<IAuction> {\n  return request({\n    url: '/auctions/publish',\n    method: 'POST',\n    data,\n    headers: {\n      Authorization: `Bearer ${getJWT()}`,\n    },\n  }).then(({ data }) => data);\n}\n\nexport function updateAuction(\n  auctionId: string,\n  data: Partial<IAuction>,\n): Promise<IAuction> {\n  return request({\n    url: `/auctions/${auctionId}`,\n    method: 'POST',\n    data,\n    headers: {\n      Authorization: `Bearer ${getJWT()}`,\n    },\n  }).then(({ data }) => data);\n}\n\nexport interface IUnpublish {\n  auctionId: string;\n}\n\nexport function unpublishAuction(data: IUnpublish): Promise<void> {\n  return request({\n    url: '/auctions/unpublish',\n    method: 'POST',\n    data,\n    headers: {\n      Authorization: `Bearer ${getJWT()}`,\n    },\n  }).then(({ data }) => data);\n}\n","import request from '../adapters/xhr';\nimport { getJWT } from '../utils/storage';\nimport { IAuction } from './getAuctions';\n\nexport function setWinner(\n  auctionId: string,\n  winnerId: string,\n): Promise<IAuction> {\n  return request({\n    url: `/auctions/${auctionId}/winner`,\n    method: 'POST',\n    data: { winnerId },\n    headers: {\n      Authorization: `Bearer ${getJWT()}`,\n    },\n  }).then(({ data }) => data);\n}\n\nexport function applyAuction(auctionId: string): Promise<IAuction> {\n  return request({\n    url: `/auctions/${auctionId}/apply`,\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${getJWT()}`,\n    },\n  }).then(({ data }) => data);\n}\n\nexport function discardAuction(auctionId: string): Promise<IAuction> {\n  return request({\n    url: `/auctions/${auctionId}/discard`,\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${getJWT()}`,\n    },\n  }).then(({ data }) => data);\n}\n","import { useState } from 'react';\n\nimport {\n  getAuctions as getAuctionsService,\n  getAuctionById as getAuctionByIdService,\n  getAuctionsByAccount as getAccountAuctionsService,\n  IRequestAuctions,\n  IAuction,\n} from '../services/getAuctions';\n\nexport function useAuctions() {\n  const [loading, setLoading] = useState(false);\n  const [auctions, setAuctions] = useState<IAuction[]>([]);\n  const [auction, setAuction] = useState<IAuction>({} as IAuction);\n\n  const getAuctions = (params: IRequestAuctions) => {\n    setLoading(true);\n\n    getAuctionsService(params).then((data) => {\n      setAuctions(data);\n      setLoading(false);\n    });\n  };\n\n  const getAccountAuctions = (params: IRequestAuctions) => {\n    setLoading(true);\n\n    getAccountAuctionsService(params).then((data) => {\n      setAuctions(data);\n      setLoading(false);\n    });\n  };\n\n  const getAuctionById = (id: string) => {\n    setLoading(true);\n\n    getAuctionByIdService(id).then((data) => {\n      setAuction(data);\n      setLoading(false);\n    });\n  };\n\n  return {\n    loading,\n    auctions,\n    auction,\n    setAuction,\n    setAuctions,\n    getAuctions,\n    getAccountAuctions,\n    getAuctionById,\n  };\n}\n","import request from '../adapters/xhr';\nimport { getJWT } from '../utils/storage';\nimport { IAccount } from './getAccount';\n\nexport interface IRequestAuctions {\n  page?: number;\n  limit?: number;\n  applied?: boolean;\n  winners?: boolean;\n  showcased?: boolean;\n  status?: string;\n}\n\nexport interface IAuction {\n  _id: string;\n  title: string;\n  description: string;\n  category: string;\n  imageUrl: string;\n  owner: any;\n  winner: any;\n  appliers?: any[];\n  status: string;\n  finishedAt?: Date;\n  createdAt: Date;\n  updatedAt?: Date;\n}\n\nexport function getAuctions(params: IRequestAuctions): Promise<IAuction[]> {\n  return request({\n    url: '/auctions',\n    method: 'GET',\n    params,\n    headers: {\n      Authorization: `Bearer ${getJWT()}`,\n    },\n  }).then(({ data }) => data);\n}\n\nexport function getAuctionsByAccount(\n  params: IRequestAuctions,\n): Promise<IAuction[]> {\n  return request({\n    url: '/auctions/me',\n    method: 'GET',\n    params,\n    headers: {\n      Authorization: `Bearer ${getJWT()}`,\n    },\n  }).then(({ data }) => data);\n}\n\nexport function getAuctionById(id: string): Promise<IAuction> {\n  return request({ url: `/auctions/${id}`, method: 'GET' }).then(\n    ({ data }) => data,\n  );\n}\n","import {\n  ExpandMore,\n  FavoriteBorder,\n  StarBorderTwoTone,\n} from '@mui/icons-material';\nimport {\n  Alert,\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Checkbox,\n  CircularProgress,\n  Collapse,\n  Divider,\n  Grid,\n  IconButton,\n  Modal,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { blue, red } from '@mui/material/colors';\nimport { Box } from '@mui/system';\nimport { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router';\nimport { useAuctionCreator } from '../../hooks/useAuctionCreator';\n\nimport { useAuctions } from '../../hooks/useAuctions';\nimport { IAccount } from '../../services/getAccount';\n\nconst defaultImg = 'https://cdn.hswstatic.com/gif/yard-sale-1.jpg';\n\nexport function Auction({ account }: { account: IAccount }) {\n  const { loading, auctions, getAuctions, setAuctions } = useAuctions();\n  const {\n    creating,\n    auctionCreated,\n    publishAuction,\n    setCreating,\n    applyAuction,\n    discardAuction,\n  } = useAuctionCreator();\n  const [errorMsg, setErrorMsg] = useState('');\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n\n  useEffect(() => {\n    getAuctions({ showcased: true, status: 'active' });\n  }, [auctionCreated]);\n\n  const cleanPublishState = () => {\n    setImageUrl('');\n    setCategory('');\n    setDescription('');\n    setTitle('');\n  };\n\n  const handlePublisher = () => {\n    setErrorMsg('');\n    setCreating(true);\n\n    publishAuction({\n      title,\n      description,\n      category,\n      imageUrl,\n    })\n      .then(() => {\n        setCreating(false);\n        toggleModal();\n      })\n      .catch((error) => {\n        setCreating(false);\n        setErrorMsg(error.message);\n        console.log(error.message);\n        toggleModal();\n      });\n  };\n\n  const handleApply = (auctionId: string) => {\n    setCreating(true);\n\n    applyAuction(auctionId).then((data) => {\n      setCreating(false);\n    });\n  };\n\n  const handleDiscard = (auctionId: string) => {\n    setCreating(true);\n\n    discardAuction(auctionId).then((data) => {\n      setCreating(false);\n    });\n  };\n\n  const toggleModal = () => {\n    setOpen((prev) => !prev);\n    cleanPublishState();\n  };\n\n  return (\n    <div>\n      <Grid\n        container\n        direction=\"column\"\n        alignContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12}>\n          {loading ? (\n            <Grid container direction=\"column\" alignContent=\"center\">\n              <CircularProgress color=\"secondary\" />\n            </Grid>\n          ) : (\n            <Box sx={{ width: '100%' }} flexGrow={1}>\n              <Modal\n                open={open}\n                onClose={toggleModal}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n              >\n                <Box\n                  sx={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    width: 400,\n                    bgcolor: 'background.paper',\n                    border: '2px solid #000',\n                    boxShadow: 24,\n                    p: 4,\n                  }}\n                >\n                  <Typography\n                    id=\"modal-modal-title\"\n                    variant=\"h6\"\n                    component=\"h2\"\n                  >\n                    Please complete the fields\n                  </Typography>\n\n                  <div>\n                    <TextField\n                      fullWidth\n                      required\n                      label=\"Tilte\"\n                      margin=\"normal\"\n                      onChange={(e) => setTitle(e.target.value)}\n                      value={title}\n                    />\n                  </div>\n\n                  <div>\n                    <TextField\n                      fullWidth\n                      required\n                      label=\"Description\"\n                      margin=\"normal\"\n                      onChange={(e) => setDescription(e.target.value)}\n                      value={description}\n                    />\n                  </div>\n\n                  <div>\n                    <TextField\n                      fullWidth\n                      required\n                      label=\"Category\"\n                      margin=\"normal\"\n                      onChange={(e) => setCategory(e.target.value)}\n                      value={category}\n                    />\n                  </div>\n\n                  <div>\n                    <TextField\n                      fullWidth\n                      label=\"Imagen URL (if not, default is applied)\"\n                      margin=\"normal\"\n                      onChange={(e) => setImageUrl(e.target.value)}\n                      value={imageUrl}\n                    />\n                  </div>\n\n                  <Box marginTop=\"10\">\n                    <Button\n                      disabled={creating}\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"info\"\n                      onClick={handlePublisher}\n                    >\n                      Create Auction!\n                    </Button>\n                  </Box>\n                </Box>\n              </Modal>\n\n              <div style={{ width: '100%' }}>\n                <div style={{ padding: '20px' }}>\n                  <Typography id=\"modal-modal-title\">\n                    Here we have our popular Auctions listed!\n                  </Typography>\n                </div>\n\n                {Boolean(errorMsg) && (\n                  <div>\n                    <Alert severity=\"error\">{errorMsg}</Alert>\n                  </div>\n                )}\n\n                <div style={{ padding: '20px' }}>\n                  <Button variant=\"outlined\" color=\"info\" onClick={toggleModal}>\n                    Create New Auction\n                  </Button>\n                </div>\n\n                {auctions.length > 0 ? (\n                  auctions.map((auct) => {\n                    const alreadyApplied = auct.appliers?.includes(\n                      account._id as string,\n                    );\n\n                    const myListing = auct.owner._id === account._id;\n\n                    console.log(myListing);\n\n                    return (\n                      <Card\n                        key={auct._id}\n                        sx={{ maxWidth: 345, marginBottom: 4 }}\n                      >\n                        <CardHeader\n                          avatar={\n                            <Avatar\n                              sx={{ bgcolor: blue[500] }}\n                              aria-label=\"recipe\"\n                            >\n                              {auct.owner.firstName.slice(0, 1)}\n                              {auct.owner.lastName.slice(0, 1)}\n                            </Avatar>\n                          }\n                          title={auct.title}\n                          subheader={new Date(auct.createdAt).toLocaleString()}\n                        />\n                        <CardMedia\n                          component=\"img\"\n                          height=\"100\"\n                          image={auct.imageUrl || defaultImg}\n                          loading=\"lazy\"\n                          alt=\"Sell\"\n                        />\n                        <CardContent>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {auct.description}\n                            <Divider />\n                            <b>Total people applied: {auct.appliers?.length}</b>\n                          </Typography>\n                        </CardContent>\n\n                        <CardActions disableSpacing>\n                          {myListing && (\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                              Share your listing with your friends!\n                            </Typography>\n                          )}\n\n                          {!alreadyApplied && auct.owner._id !== account._id && (\n                            <Button\n                              variant=\"contained\"\n                              color=\"success\"\n                              onClick={(e) => handleApply(auct?._id)}\n                            >\n                              Apply now =D\n                            </Button>\n                          )}\n\n                          {alreadyApplied && auct.owner._id !== account._id && (\n                            <Button\n                              variant=\"contained\"\n                              color=\"warning\"\n                              onClick={(e) => handleDiscard(auct?._id)}\n                            >\n                              Discard now =(\n                            </Button>\n                          )}\n\n                          <IconButton aria-label=\"share\">\n                            {/* <ShareIcon /> */}\n                          </IconButton>\n                          {/* <ExpandMore\n                          expand={expanded}\n                          onClick={handleExpandClick}\n                          aria-expanded={expanded}\n                          aria-label=\"show more\"\n                        >\n                          <ExpandMoreIcon />\n                        </ExpandMore> */}\n                        </CardActions>\n\n                        <Collapse\n                          // in={expanded}\n                          timeout=\"auto\"\n                          unmountOnExit\n                        >\n                          <CardContent>\n                            <Typography paragraph>Method:</Typography>\n                            <Typography>\n                              Set aside off of the heat to let rest for 10\n                              minutes, and then serve.\n                            </Typography>\n                          </CardContent>\n                        </Collapse>\n                      </Card>\n                    );\n                  })\n                ) : (\n                  <div\n                    style={{\n                      padding: '20px',\n                    }}\n                  >\n                    <Typography id=\"modal-modal-title\">\n                      Upss It seems that nobody have something to drop off here,\n                      start creating!\n                      <Box marginTop=\"10\" paddingTop=\"30\">\n                        <Button\n                          // disabled={creating}\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"info\"\n                          // onClick={() => <Redirect to={} />}\n                        >\n                          Create Auction!\n                        </Button>\n                      </Box>\n                    </Typography>\n                  </div>\n                )}\n              </div>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  CircularProgress,\n  Collapse,\n  Divider,\n  Grid,\n  Typography,\n} from '@mui/material';\nimport { blue } from '@mui/material/colors';\nimport { Box } from '@mui/system';\nimport { useEffect, useState } from 'react';\nimport { useAuctionCreator } from '../../hooks/useAuctionCreator';\n\nimport { useAuctions } from '../../hooks/useAuctions';\nimport { IAccount } from '../../services/getAccount';\n\nexport function Winner({ account }: { account: IAccount }) {\n  const { loading, auctions, getAuctions } = useAuctions();\n  const { auctionCreated } = useAuctionCreator();\n\n  useEffect(() => {\n    getAuctions({ showcased: true, winners: true });\n  }, [auctionCreated]);\n\n  return (\n    <div>\n      <Grid\n        container\n        direction=\"column\"\n        alignContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12}>\n          {loading ? (\n            <Grid container direction=\"column\" alignContent=\"center\">\n              <CircularProgress color=\"secondary\" />\n            </Grid>\n          ) : (\n            <Box sx={{ width: '100%' }} flexGrow={1}>\n              <div style={{ width: '100%' }}>\n                <div style={{ padding: '20px' }}>\n                  <Typography id=\"modal-modal-title\">\n                    Congrats our winners!\n                  </Typography>\n                </div>\n\n                {auctions.length > 0 ? (\n                  auctions.map((auct) => {\n                    const alreadyApplied = auct.appliers?.includes(\n                      account._id as string,\n                    );\n\n                    const myListing = auct.owner._id === account._id;\n\n                    console.log(myListing);\n\n                    return (\n                      <Card\n                        key={auct._id}\n                        sx={{ maxWidth: 345, marginBottom: 4 }}\n                      >\n                        <CardHeader\n                          avatar={\n                            <Avatar\n                              sx={{ bgcolor: blue[500] }}\n                              aria-label=\"recipe\"\n                            >\n                              {auct.owner.firstName.slice(0, 1)}\n                              {auct.owner.lastName.slice(0, 1)}\n                            </Avatar>\n                          }\n                          title={auct.title}\n                          subheader={new Date(auct.createdAt).toLocaleString()}\n                        />\n                        <CardMedia\n                          component=\"img\"\n                          height=\"100\"\n                          image={auct.imageUrl}\n                          loading=\"lazy\"\n                          alt=\"Sell\"\n                        />\n                        <CardContent>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {auct.description}\n                            <Divider />\n\n                            {auct?.winner?._id === account?._id ? (\n                              <b>\n                                Amazing you won! Please contact with auction\n                                responsible. Thank you!\n                              </b>\n                            ) : (\n                              <b>\n                                {auct?.winner?.firstName}{' '}\n                                {auct?.winner?.lastName} Won!\n                              </b>\n                            )}\n                          </Typography>\n                        </CardContent>\n\n                        {auct?.winner?._id === account?._id && (\n                          <Collapse\n                            style={{ backgroundColor: 'skyblue' }}\n                            key={auct?._id}\n                            in={true}\n                            timeout=\"auto\"\n                            unmountOnExit\n                          >\n                            <CardContent>\n                              <Typography>\n                                Email: {auct?.owner?.profile?.email}\n                                Phone: {auct?.owner?.profile?.phone}\n                              </Typography>\n                            </CardContent>\n                          </Collapse>\n                        )}\n                      </Card>\n                    );\n                  })\n                ) : (\n                  <div\n                    style={{\n                      padding: '20px',\n                    }}\n                  >\n                    <Typography id=\"modal-modal-title\">\n                      Upss It seems that nobody have won yet, start creating and\n                      applying some listings!\n                    </Typography>\n                  </div>\n                )}\n              </div>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router';\nimport {\n  AppBar,\n  Box,\n  CircularProgress,\n  Grid,\n  IconButton,\n  Tab,\n  Tabs,\n  Typography,\n} from '@mui/material';\nimport { ExitToApp, Person } from '@mui/icons-material';\n\nimport { useUser } from '../hooks/useUser';\nimport { Auction } from '../components/Auction';\nimport { Winner } from '../components/Winner';\n\nexport const tabNames = {\n  Auctions: 'auctions',\n  Winners: 'winners',\n};\n\nexport function Home() {\n  const { account, fetchAccount, isLoggedIn, loginLoading, logout } = useUser();\n  const [tab, setTab] = useState(tabNames.Auctions);\n\n  useEffect(() => {\n    if (isLoggedIn && !account.firstName && !loginLoading) {\n      console.log('fetching missing account data!');\n\n      fetchAccount();\n    }\n  }, [isLoggedIn, account, fetchAccount]);\n\n  if (!isLoggedIn) {\n    console.log('Needed to log!');\n\n    return <Redirect to=\"/login\" />;\n  }\n  const handleExit = () => {\n    logout();\n  };\n\n  const handleChange = (_event, newValue) => {\n    setTab(newValue);\n  };\n\n  return (\n    <Box height=\"150\">\n      <AppBar position=\"static\">\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            href=\"/account\"\n            color=\"inherit\"\n          >\n            <Person />{' '}\n            <Typography variant=\"h6\" component=\"div\">\n              {account.firstName} {account.lastName}\n            </Typography>\n          </IconButton>\n\n          <div style={{ width: '90%' }}></div>\n\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleExit}\n            color=\"inherit\"\n          >\n            <ExitToApp />\n          </IconButton>\n        </Box>\n      </AppBar>\n\n      <div>\n        <Grid\n          container\n          direction=\"column\"\n          alignContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={12}>\n            {loginLoading ? (\n              <Grid container direction=\"column\" alignContent=\"center\">\n                <CircularProgress color=\"secondary\" />\n              </Grid>\n            ) : (\n              <Box sx={{ width: '100%' }} flexGrow={1}>\n                <Tabs\n                  value={tab}\n                  onChange={handleChange}\n                  textColor=\"secondary\"\n                  indicatorColor=\"secondary\"\n                >\n                  <Tab value={tabNames.Auctions} label=\"Auctions\" />\n                  <Tab value={tabNames.Winners} label=\"Winners\" />\n                </Tabs>\n\n                {tab === tabNames.Auctions ? (\n                  <Auction account={account} />\n                ) : (\n                  <Winner account={account} />\n                )}\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    </Box>\n  );\n}\n","import {\n  Box,\n  Button,\n  CircularProgress,\n  Grid,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { useState } from 'react';\nimport { Redirect } from 'react-router';\nimport { useUser } from '../hooks/useUser';\n\nexport function Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { login, loginError, loginLoading, isLoggedIn } = useUser();\n\n  if (isLoggedIn && !loginLoading) {\n    console.log('logged in, go Home!');\n\n    return <Redirect to=\"/home\" />;\n  }\n\n  const handleLogin = () => {\n    login({ email, password });\n  };\n\n  const handleKeyPress = ({ which }) => {\n    console.log(which);\n\n    if (which === 13) {\n      handleLogin();\n    }\n  };\n\n  return (\n    <div>\n      <Grid\n        container\n        direction=\"column\"\n        alignContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12}>\n          <Typography variant=\"h3\" align=\"center\" color=\"secondary\">\n            Auctions Now!\n          </Typography>\n\n          <Typography variant=\"h6\" align=\"center\" color=\"secondary\">\n            Login\n          </Typography>\n\n          {loginLoading && (\n            <Grid container direction=\"column\" alignContent=\"center\">\n              <CircularProgress color=\"secondary\" />\n            </Grid>\n          )}\n\n          {!loginLoading && (\n            <Box component=\"form\">\n              <div>\n                <TextField\n                  fullWidth\n                  required\n                  id=\"outlined-required\"\n                  label=\"Email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                />\n              </div>\n\n              <div>\n                <TextField\n                  fullWidth\n                  required\n                  type=\"password\"\n                  id=\"password\"\n                  label=\"Password\"\n                  margin=\"normal\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  onKeyDown={handleKeyPress}\n                />\n              </div>\n\n              <Box marginTop=\"10\">\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"success\"\n                  onClick={handleLogin}\n                >\n                  GO\n                </Button>\n              </Box>\n\n              <Box>\n                {loginError && (\n                  <Typography id=\"modal-modal-title\">\n                    Invalid user, try again please.\n                  </Typography>\n                )}\n              </Box>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { createTheme } from '@mui/material';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#757575',\n    },\n    secondary: {\n      main: '#01579b',\n    },\n  },\n});\n\nexport default theme;\n","import {\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  CircularProgress,\n  Collapse,\n  Divider,\n  Grid,\n  Typography,\n} from '@mui/material';\nimport { blue } from '@mui/material/colors';\nimport { Box } from '@mui/system';\nimport { useEffect, useState } from 'react';\nimport { useAuctionCreator } from '../../../hooks/useAuctionCreator';\n\nimport { useAuctions } from '../../../hooks/useAuctions';\nimport { IAccount } from '../../../services/getAccount';\n\nexport function AccountApplied({ account }: { account: IAccount }) {\n  const { loading, auctions, getAuctions } = useAuctions();\n  const { auctionCreated, discardAuction, setCreating } = useAuctionCreator();\n\n  useEffect(() => {\n    getAuctions({ applied: true });\n  }, [auctionCreated]);\n\n  const handleDiscard = (auctionId: string) => {\n    setCreating(true);\n\n    discardAuction(auctionId).then((data) => {\n      setCreating(false);\n    });\n  };\n\n  return (\n    <div>\n      <Grid\n        container\n        direction=\"column\"\n        alignContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12}>\n          {loading ? (\n            <Grid container direction=\"column\" alignContent=\"center\">\n              <CircularProgress color=\"secondary\" />\n            </Grid>\n          ) : (\n            <Box sx={{ width: '100%' }} flexGrow={1}>\n              <div style={{ width: '100%' }}>\n                <div style={{ padding: '20px' }}>\n                  <Typography id=\"modal-modal-title\">Your applies!</Typography>\n                </div>\n\n                {auctions.length > 0 ? (\n                  auctions.map((auct) => {\n                    const iWon = auct?.winner?._id === account._id;\n\n                    return (\n                      <Card\n                        key={auct._id}\n                        sx={{ maxWidth: 345, marginBottom: 4 }}\n                      >\n                        <CardHeader\n                          avatar={\n                            <Avatar\n                              sx={{ bgcolor: blue[500] }}\n                              aria-label=\"recipe\"\n                            >\n                              {auct.owner.firstName.slice(0, 1)}\n                              {auct.owner.lastName.slice(0, 1)}\n                            </Avatar>\n                          }\n                          title={auct.title}\n                          subheader={new Date(auct.createdAt).toLocaleString()}\n                        />\n                        <CardMedia\n                          component=\"img\"\n                          height=\"100\"\n                          image={auct.imageUrl}\n                          loading=\"lazy\"\n                          alt=\"Sell\"\n                        />\n                        <CardContent>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {auct.description}\n                            <Divider />\n\n                            {iWon && (\n                              <b color=\"blue\">\n                                Amazing you won! Please contact with the person\n                                below\n                              </b>\n                            )}\n\n                            {auct?.winner && (\n                              <b>\n                                {auct?.winner?.firstName}{' '}\n                                {auct?.winner?.lastName} Won!\n                              </b>\n                            )}\n\n                            {!iWon && !auct?.winner && (\n                              <div>\n                                <br />\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"warning\"\n                                  onClick={(e) => handleDiscard(auct?._id)}\n                                >\n                                  Discard now =(\n                                </Button>\n                              </div>\n                            )}\n                          </Typography>\n                        </CardContent>\n\n                        {iWon && (\n                          <Collapse\n                            key={auct?._id}\n                            in={true}\n                            timeout=\"auto\"\n                            unmountOnExit\n                          >\n                            <CardContent>\n                              <Typography>\n                                Email: {auct?.owner?.profile?.email}\n                              </Typography>\n\n                              <Typography>\n                                Phone: {auct?.owner?.profile?.phone}\n                              </Typography>\n                            </CardContent>\n                          </Collapse>\n                        )}\n                      </Card>\n                    );\n                  })\n                ) : (\n                  <div\n                    style={{\n                      padding: '20px',\n                    }}\n                  >\n                    <Typography id=\"modal-modal-title\">\n                      Upss It seems that you dont have any apply to a recent\n                      auction... Got and get some\n                    </Typography>\n                  </div>\n                )}\n              </div>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport {\n  Alert,\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  CircularProgress,\n  Collapse,\n  Divider,\n  Grid,\n  IconButton,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { DeleteOutlineRounded } from '@mui/icons-material';\nimport { blue, red } from '@mui/material/colors';\n\nimport { IAccount } from '../../../services/getAccount';\nimport { useAuctionCreator } from '../../../hooks/useAuctionCreator';\nimport { useAuctions } from '../../../hooks/useAuctions';\n\nconst defaultImg = 'https://cdn.hswstatic.com/gif/yard-sale-1.jpg';\n\nexport function Listings({ account }: { account: IAccount }) {\n  const { loading, auctions, getAccountAuctions } = useAuctions();\n  const { auctionCreated, setCreating, setWinner, creating, unpublishAuction } =\n    useAuctionCreator();\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    getAccountAuctions({});\n  }, [auctionCreated, creating]);\n\n  const handleWinner = (auctionId: string, applierId: string) => {\n    setCreating(true);\n\n    setWinner(auctionId, applierId)\n      .then((data) => {\n        setCreating(false);\n      })\n      .catch((error) => {\n        setCreating(false);\n        setErrorMsg(error.message);\n        console.log(error.message);\n      });\n  };\n\n  const handleRemoveListing = (auctionId: string) => {\n    setCreating(true);\n\n    unpublishAuction({ auctionId })\n      .then((data) => {\n        setCreating(false);\n      })\n      .catch((error) => {\n        setCreating(false);\n        setErrorMsg(error.message);\n        console.log(error.message);\n      });\n  };\n\n  return (\n    <div>\n      <Grid\n        container\n        direction=\"column\"\n        alignContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12}>\n          {loading ? (\n            <Grid container direction=\"column\" alignContent=\"center\">\n              <CircularProgress color=\"secondary\" />\n            </Grid>\n          ) : (\n            <Box sx={{ width: '100%' }} flexGrow={1}>\n              <div style={{ width: '100%' }}>\n                <div style={{ padding: '20px' }}>\n                  <Typography id=\"modal-modal-title\">\n                    Here we have our popular Auctions listed!\n                  </Typography>\n                </div>\n\n                {Boolean(errorMsg) && (\n                  <div>\n                    <Alert severity=\"error\">{errorMsg}</Alert>\n                  </div>\n                )}\n\n                {auctions.length > 0 ? (\n                  auctions.map((auct) => {\n                    const alreadyApplied = auct.appliers?.includes(\n                      account?._id as string,\n                    );\n\n                    const myListing = auct.owner._id === account._id;\n\n                    console.log(myListing);\n\n                    return (\n                      <Card\n                        key={auct._id}\n                        sx={{ maxWidth: 345, marginBottom: 4, padding: 2 }}\n                      >\n                        <CardHeader\n                          avatar={\n                            <Avatar\n                              sx={{ bgcolor: blue[500] }}\n                              aria-label=\"recipe\"\n                            >\n                              {auct.owner.firstName.slice(0, 1)}\n                              {auct.owner.lastName.slice(0, 1)}\n                            </Avatar>\n                          }\n                          action={\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                              <b>{auct.status.toUpperCase()}</b>\n                            </Typography>\n                          }\n                          title={auct.title}\n                          subheader={new Date(auct.createdAt).toLocaleString()}\n                        />\n\n                        <CardMedia\n                          component=\"img\"\n                          height=\"100\"\n                          image={auct.imageUrl || defaultImg}\n                          loading=\"lazy\"\n                          alt=\"Sell\"\n                        />\n\n                        <CardContent>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {auct.description}\n                            <Divider />\n                            <b>Total people applied: {auct.appliers?.length}</b>\n                          </Typography>\n                        </CardContent>\n\n                        <CardActions disableSpacing>\n                          <Tooltip title=\"Delete\">\n                            <IconButton\n                              onClick={() => handleRemoveListing(auct?._id)}\n                            >\n                              <DeleteOutlineRounded />\n                            </IconButton>\n                          </Tooltip>\n                        </CardActions>\n\n                        <Collapse\n                          key={auct?._id}\n                          in={true}\n                          timeout=\"auto\"\n                          unmountOnExit\n                        >\n                          {auct?.appliers &&\n                            auct?.status !== 'finished' &&\n                            auct?.appliers?.length > 0 &&\n                            auct.appliers.map((app) => {\n                              return (\n                                <Card\n                                  key={app?._id}\n                                  style={{ marginBottom: 10 }}\n                                >\n                                  <CardContent>\n                                    <Typography>\n                                      Email: {app?.profile?.email}\n                                    </Typography>\n\n                                    <Typography>\n                                      Phone: {app?.profile?.phone}\n                                    </Typography>\n                                  </CardContent>\n\n                                  <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={(e) =>\n                                      handleWinner(auct?._id, app?._id)\n                                    }\n                                  >\n                                    SELECT WINNER!\n                                  </Button>\n                                </Card>\n                              );\n                            })}\n\n                          {auct?.winner && auct?.status === 'finished' && (\n                            <Card>\n                              <CardContent>\n                                <Typography paragraph>\n                                  You choose {auct?.winner?.firstName} as the\n                                  winner!\n                                </Typography>\n                              </CardContent>\n\n                              <CardContent>\n                                <Typography paragraph>\n                                  Contact Details:\n                                </Typography>\n                                <Typography>\n                                  Email: {auct?.winner?.profile?.email}\n                                </Typography>\n                                <Typography>\n                                  Phone: {auct?.winner?.profile?.phone}\n                                </Typography>\n                              </CardContent>\n                            </Card>\n                          )}\n                        </Collapse>\n                      </Card>\n                    );\n                  })\n                ) : (\n                  <div\n                    style={{\n                      padding: '20px',\n                    }}\n                  >\n                    <Typography id=\"modal-modal-title\">\n                      Upss It seems that nobody have something to drop off here,\n                      start creating!\n                    </Typography>\n                  </div>\n                )}\n              </div>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router';\nimport {\n  AppBar,\n  Box,\n  CircularProgress,\n  Grid,\n  IconButton,\n  Tab,\n  Tabs,\n  Typography,\n} from '@mui/material';\nimport { ExitToApp, Home } from '@mui/icons-material';\n\nimport { useUser } from '../hooks/useUser';\nimport { AccountApplied } from '../components/Account/Applied';\nimport { IAccount } from '../services/getAccount';\nimport { Listings } from '../components/Account/Listing';\n\nexport const tabNames = {\n  Applied: 'applied',\n  Listings: 'listings',\n};\n\nconst renderView = (account: IAccount, tab: string) => {\n  const component = {\n    applied: <AccountApplied account={account} />,\n    finished: <AccountApplied account={account} />,\n    listings: <Listings account={account} />,\n  };\n\n  return component[tab];\n};\n\nexport function Account() {\n  const { account, fetchAccount, isLoggedIn, loginLoading, logout } = useUser();\n  const [tab, setTab] = useState(tabNames.Listings);\n\n  useEffect(() => {\n    if (isLoggedIn && !account.firstName && !loginLoading) {\n      console.log('fetching missing account data!');\n\n      fetchAccount();\n    }\n  }, [isLoggedIn, account, fetchAccount]);\n\n  if (!isLoggedIn) {\n    console.log('Needed to log!');\n\n    return <Redirect to=\"/login\" />;\n  }\n\n  const handleExit = () => {\n    logout();\n  };\n\n  const handleChange = (_event, newValue) => {\n    setTab(newValue);\n  };\n\n  return (\n    <Box height=\"150\">\n      <AppBar position=\"static\">\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            href=\"/home\"\n            color=\"inherit\"\n          >\n            <Home />\n            <Typography variant=\"h6\" component=\"div\">\n              Back Home {account.firstName} {account.lastName}\n            </Typography>\n          </IconButton>\n\n          <div style={{ width: '90%' }}></div>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleExit}\n            color=\"inherit\"\n          >\n            <ExitToApp />\n          </IconButton>\n        </Box>\n      </AppBar>\n\n      <div>\n        <Grid\n          container\n          direction=\"column\"\n          alignContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={12}>\n            {loginLoading ? (\n              <Grid container direction=\"column\" alignContent=\"center\">\n                <CircularProgress color=\"secondary\" />\n              </Grid>\n            ) : (\n              <Box sx={{ width: '100%' }} flexGrow={1}>\n                <Tabs\n                  value={tab}\n                  onChange={handleChange}\n                  textColor=\"secondary\"\n                  indicatorColor=\"secondary\"\n                >\n                  <Tab value={tabNames.Listings} label=\"Your Listings\" />\n                  <Tab value={tabNames.Applied} label=\"Your Applies\" />\n                </Tabs>\n\n                {renderView(account, tab)}\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { ThemeProvider } from '@mui/material';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\n\nimport { Home } from './pages/Home';\nimport { Login } from './pages/Login';\n\nimport theme from './theme';\nimport { Account } from './pages/Account';\n\nexport const NotFound = () => {\n  return <Redirect to=\"/home\" />;\n};\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/account\" component={Account} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}